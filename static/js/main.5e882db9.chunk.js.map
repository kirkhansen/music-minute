{"version":3,"sources":["images/screen-shot-1.png","images/screen-shot-2.png","history.js","constants.js","utilities.js","Components/QuestionComponent.js","Components/ErrorBoundary.js","Pages/Templates/DefaultTemplate.js","Pages/MMM/MMMContainer.js","Pages/About/About.js","Pages/About/AboutContainer.js","Pages/Home/HomeContainer.js","Pages/Error/GenericNotFoundContainer.js","App.routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","createBrowserHistory","RoutePath","TimeSignatureOptions","value","label","NoteValueOptions","NoteValues","whole","properName","vfNotation","duration","numericDesignation","active","half","quarter","eighth","sixteenth","thirtysecond","getBeatsPerMeasure","timeSignature","split","getNoteTypeForBeat","getAllowedNotesFromTimeSignature","noteValues","beatValue","allNotes","Object","keys","noteMatchIndex","forEach","item","index","multiplier","ret","tmp","normalizedDuration","push","getNoteValuesFromTimeSignature","bpm","filter","getAllowedNotesFromTimeSignatureAndActiveNotes","allowedNotes","notes","getNoteValuesFromTimeSignatureAndCustomNotes","test","this","getRandomTimeSignature","allowedMeters","Math","floor","random","length","getXRandomTimeSignaturesFromAllowed","count","timeSignatureArray","i","getRandomFromAllowedNotes","noteChoices","getRandomNoteFromAllowedNotes","finishMeasure","beatsLeft","arrayOfIndexes","beatsLeftInMeasure","getNoteSuffix","type","QuestionComponent","Component","constructor","props","super","console","log","identifier","noteTypes","randomNote","state","sTimeSignature","sAllowedNotes","sAllowedMeters","sPickedNote","sNumberOfBeats","sBeatValue","sId","sNoteSuffix","clefType","fakeClefType","notePosition","barType","lineConfig","visible","handleClick","bind","componentDidUpdate","document","getElementById","innerHTML","noteContainer","renderer","Vex","Flow","Renderer","Backends","SVG","resize","ctx","getContext","stave","Stave","setConfigForLines","addClef","addTimeSignature","setEndBarType","note","StaveNote","clef","remainingBeats","match","find","GhostNote","voice","Voice","num_beats","beat_value","addTickables","Formatter","joinVoices","format","setContext","draw","componentDidMount","createElement","id","classList","add","rowContainer","container","getElementsByClassName","appendChild","e","setState","render","questionContainerClass","className","data-id","onClick","ErrorBoundary","React","hasError","componentDidCatch","error","info","children","DefaultTemplate","PureComponent","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","activeClassName","exact","MMMContainer","questionTypes","questionCount","renderWorksheet","timeSigs","hasCustomNotes","handleChangeOfAllowedValues","handleChangeQuestionTypes","handleChangeQuestionCount","handleMeterChange","handleToggleRender","componentWillUnmount","timesSigs","currentTarget","copy","hasNotes","x","canRender","meters","customNotes","values","buttonText","cx","hide","name","defaultChecked","htmlFor","min","max","default","placeholder","onChange","handleChangeQustionCount","onInput","isMulti","isSearchable","options","disabled","window","print","map","time","key","About","href","AboutContainer","HomeContainer","class","src","noteNammerLogo","alt","noteValueLogo","GenericNotFoundContainer","AppRoutes","path","component","App","history","Boolean","location","hostname","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5e882db9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/screen-shot-1.806d58ca.png\";","module.exports = __webpack_public_path__ + \"static/media/screen-shot-2.a2de2822.png\";","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","export const RoutePath = {\n    HOME: '/',\n    ABOUT: '/about',\n    NAMES: '/create/names',\n    VALUES: '/create/values'\n}\n\nexport const TimeSignatures = ['3/2', '2/2', '2/4', '3/4', '4/4', '5/4', '3/8', '5/8', '6/8', '9/8', '12/8']\n\nexport const TimeSignatureOptions = [\n    { value: '3/2', label: '3/2', },\n    { value: '2/2', label: '2/2', },\n    { value: '2/4', label: '2/4', },\n    { value: '3/4', label: '3/4', },\n    { value: '4/4', label: '4/4', },\n    { value: '5/4', label: '5/4', },\n    { value: '3/8', label: '3/8', },\n    { value: '5/8', label: '5/8', },\n    { value: '6/8', label: '6/8', },\n    { value: '9/8', label: '9/8', },\n    { value: '12/8', label: '12/8', },\n  ];\n\n  export const NoteValueOptions = [\n    { value: 'w', label: '𝅝', },\n    { value: 'h', label: '𝅗𝅥', },\n    { value: 'q', label: '♩', },\n    { value: '8', label: '𝅘𝅥𝅮', },\n    { value: '16', label: '𝅘𝅥𝅯', },\n    { value: '32', label: '𝅘𝅥𝅰', },\n  ];\n\nexport const NoteValues = {\n    whole: {\n        properName: 'Whole Note',\n        vfNotation: 'w',\n        duration: 1,\n        numericDesignation: 1,\n        active: false,\n    },\n    half: {\n        properName: 'Half Note',\n        vfNotation: 'h',\n        duration: 0.5,\n        numericDesignation: 2,\n        active: false,\n    },\n    quarter: {\n        properName: 'Quarter Note',\n        vfNotation: 'q',\n        duration: 0.25,\n        numericDesignation: 4,\n        active: false,\n    },\n    eighth: {\n        properName: 'Eighth Note',\n        vfNotation: '8',\n        duration: 0.125,\n        numericDesignation: 8,\n        active: false,\n    },\n    sixteenth: {\n        properName: 'Sixteenth Note',\n        vfNotation: '16',\n        duration: 0.0625,\n        numericDesignation: 16,\n        active: false,\n    },\n    thirtysecond: {\n        properName: 'Thirty-Second Note',\n        vfNotation: '32',\n        duration: 0.03125,\n        numericDesignation: 32,\n        active: false,\n    }\n}\n","import { TimeSignatures, NoteValues } from './constants';\n\n/**\n * Returns the number of beats per measure given a time signature\n *\n * @param   {string}  timeSignature  format of n/x where n and x are numbers\n *\n * @return  {integer}                 returns an integer\n */\nfunction getBeatsPerMeasure(timeSignature) {\n    return +timeSignature.split('/')[0];\n}\n\n/**\n * Returns an integer value depicting the note type that get's one beat\n *\n * @param   {string}  timeSignature  format of n/x where n and x are numbers\n *\n * @return  {integer}                 returns an integer\n */\nfunction getNoteTypeForBeat(timeSignature) {\n    return +timeSignature.split('/')[1];\n}\n\n/**\n * [getNoteValuesFromTimeSignature description]\n *\n * @param   {string}  timeSignature  format of n/x where n and x are numbers\n *\n * @return  {array}                 returns an array of objects\n */\nfunction getNoteValuesFromTimeSignature(timeSignature) {\n    const beatValue = getNoteTypeForBeat(timeSignature);\n    // find the object with the matching numeric designation\n    const allNotes = Object.keys(NoteValues);\n    let noteMatchIndex = null\n    allNotes.forEach((item, index) => {\n        if (NoteValues[item].numericDesignation === beatValue) {\n            noteMatchIndex = index;\n        }\n    })\n\n    // what type of note gets one beat?\n    // NoteValues[allNotes[test2]]\n\n    // What is the multiplier for all other notes to determine how many beats\n    // they get in the time signature?\n    const multiplier = (1 / NoteValues[allNotes[noteMatchIndex]].duration);\n\n    const ret = [];\n    allNotes.forEach((item, index) => {\n        let tmp = {};\n        tmp.properName = NoteValues[item].properName;\n        tmp.normalizedDuration = NoteValues[item].duration * multiplier;\n        tmp.vfNotation = NoteValues[item].vfNotation;\n        ret.push(tmp);\n    });\n    return ret;\n}\n/**\n * [getNormalizedDuration description]\n *\n * @param   {integer}  duration    [duration description]\n * @param   {integer}  multiplier  [multiplier description]\n *\n * @return  {integer}              [return description]\n */\nfunction getNormalizedDuration(duration, multiplier) {\n    return duration * multiplier;\n}\nfunction getMultiplier(duration) {\n    return ( 1 / duration );\n}\nfunction getNoteValuesFromTimeSignatureAndCustomNotes(timeSignature, notes) {\n    const beatValue = getNoteTypeForBeat(timeSignature);\n    // find the object with the matching numeric designation\n    const allNotes = Object.keys(notes);\n    let noteMatchIndex = null\n    allNotes.forEach((item, index) => {\n        if (notes[item].numericDesignation === beatValue) {\n            noteMatchIndex = index;\n        }\n    })\n    // what type of note gets one beat?\n    // NoteValues[allNotes[test2]]\n\n    // What is the multiplier for all other notes to determine how many beats\n    // they get in the time signature?\n    const multiplier = (1 / notes[allNotes[noteMatchIndex]].duration);\n\n    const ret = [];\n    allNotes.forEach((item, index) => {\n        let tmp = {};\n        tmp.properName = notes[item].properName;\n        tmp.normalizedDuration = notes[item].duration * multiplier;\n        tmp.vfNotation = notes[item].vfNotation;\n        tmp.active = notes[item].active;\n        tmp.duration = notes[item].duration;\n        tmp.numericDesignation = notes[item].numericDesignation;\n        ret.push(tmp);\n    });\n    return ret;\n}\n\nfunction getAllowedNotesFromTimeSignature(timeSignature) {\n    const noteValues = getNoteValuesFromTimeSignature(timeSignature);\n    const bpm = getBeatsPerMeasure(timeSignature);\n    return noteValues.filter(item => item.normalizedDuration <= bpm);\n}\n\nfunction getAllowedNotesFromTimeSignatureAndActiveNotes(timeSignature, allowedNotes) {\n\n    const noteValues = getNoteValuesFromTimeSignatureAndCustomNotes(timeSignature, allowedNotes);\n    const bpm = getBeatsPerMeasure(timeSignature);\n    return noteValues.filter(test, bpm);\n}\n\nfunction test(item) {\n    if (item.normalizedDuration <= this && item.active === true) {\n        return true;\n    }\n    return false;\n}\n\nfunction getRandomTimeSignature(allowedMeters) {\n    return allowedMeters[Math.floor(Math.random() * Math.floor(allowedMeters.length))];\n}\n\nfunction getXRandomTimeSignaturesFromAllowed(count, allowedMeters){\n    const timeSignatureArray = [];\n    for (let i = 0; i < count; i += 1) {\n        timeSignatureArray.push(allowedMeters[Math.floor(Math.random() * Math.floor(allowedMeters.length))]);\n    }\n    return timeSignatureArray;\n}\n\nfunction getXRandomTimeSignatures(count) {\n    const timeSignatureArray = [];\n    for (let i = 0; i < count; i += 1) {\n        timeSignatureArray.push(TimeSignatures[Math.floor(Math.random() * Math.floor(TimeSignatures.length))]);\n    }\n    return timeSignatureArray;\n}\n\nfunction getRandomNoteFromAllowedNotes(noteChoices) {\n    return noteChoices[Math.floor(Math.random() * Math.floor(noteChoices.length))];\n}\n\nfunction getRandomFromAllowedNotes(noteChoices) {\n    return getRandomNoteFromAllowedNotes(noteChoices);\n}\n\nfunction finishMeasure(beatsLeft, noteValues) {\n    const arrayOfIndexes = [];\n    let beatsLeftInMeasure = beatsLeft;\n    let i = 0;\n    while (beatsLeftInMeasure > 0) {\n        if (noteValues[i].normalizedDuration <= beatsLeftInMeasure) {\n            beatsLeftInMeasure = beatsLeftInMeasure - noteValues[i].normalizedDuration;\n            arrayOfIndexes.push(i);\n        }\n        else {\n            i = i+1;\n        }\n    }\n    return arrayOfIndexes;\n}\n\nfunction getNoteSuffix(type) {\n    if (type === 0) return ''\n    else if (type===1) return 'r';\n    const rand = Math.random() < 0.5\n    if (rand) {\n        return '';\n    }\n\n    return 'r';\n}\n\nfunction checkForCustomNotes(allowedNotes) {\n    const allowedNotesArray = Object.values(allowedNotes);\n    \n    return allowedNotesArray.find(note => note.active === true);\n}\n\nexport {\n    getBeatsPerMeasure, \n    getNoteValuesFromTimeSignature, \n    getNoteTypeForBeat, \n    getAllowedNotesFromTimeSignature,\n    getRandomTimeSignature,\n    getRandomFromAllowedNotes,\n    finishMeasure,\n    getXRandomTimeSignatures,\n    getNoteSuffix,\n    getAllowedNotesFromTimeSignatureAndActiveNotes,\n    getXRandomTimeSignaturesFromAllowed,\n    getNormalizedDuration,\n    getMultiplier,\n    checkForCustomNotes,\n};\n\n// whole: {\n//     vfNotation: 'w',\n//     duration: 1,\n//     numericDesignation: 1,\n// },","import React, { Component} from 'react';\nimport Vex from 'vexflow';\nimport './QuestionComponent.scss';\n\nimport {\n  getBeatsPerMeasure,\n  getNoteTypeForBeat,\n  getAllowedNotesFromTimeSignature,\n  getRandomTimeSignature,\n  getAllowedNotesFromTimeSignatureAndActiveNotes,\n  getRandomFromAllowedNotes,\n  finishMeasure,\n  getNoteSuffix,\n} from '../utilities';\n\nclass QuestionComponent extends Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props);\n    const {allowedNotes, identifier, noteTypes} = props;\n    const timeSignature = getRandomTimeSignature(props.allowedMeters);\n    const noteChoices = getAllowedNotesFromTimeSignatureAndActiveNotes(timeSignature, allowedNotes);\n    const randomNote = getRandomFromAllowedNotes(noteChoices);\n\n\n    this.state = {\n      sTimeSignature : timeSignature,\n      sAllowedNotes :  noteChoices,\n      sAllowedMeters: props.allowedMeters,\n      sPickedNote : randomNote,\n      sNumberOfBeats : getBeatsPerMeasure(timeSignature),\n      sBeatValue : getNoteTypeForBeat(timeSignature),\n      sId : identifier,\n      sNoteSuffix: getNoteSuffix(noteTypes),\n    }\n\n    console.log(this.state);\n    // VEXFLOW SETUP\n    this.clefType = 'percussion';\n    this.fakeClefType = 'treble';\n    this.notePosition = ['b/4'];\n    this.barType = 'double';\n    this.lineConfig = [\n      { visible: false },\n      { visible: false },\n      { visible: true },\n      { visible: false },\n      { visible: false },\n    ];\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidUpdate() {\n    console.log(this.state);\n    // Find the right question in the DOM\n    const {sId, sTimeSignature, sPickedNote, sNoteSuffix} = this.state;\n    // Empty the question but keep the container.\n    document.getElementById(sId).innerHTML = '';\n    const noteContainer = document.getElementById(sId);\n\n    var renderer = new Vex.Flow.Renderer(noteContainer, Vex.Flow.Renderer.Backends.SVG);\n    renderer.resize(150, 150);\n    var ctx = renderer.getContext();\n    var stave = new Vex.Flow.Stave(10, 40, 120);\n    stave.setConfigForLines(this.lineConfig);\n    stave\n      .addClef(this.clefType)\n      .addTimeSignature(sTimeSignature)\n      .setEndBarType(this.barType);\n    var note = [];\n    if (getBeatsPerMeasure(sTimeSignature) - sPickedNote.normalizedDuration === 0) {\n      note.push(new Vex.Flow.StaveNote({ clef: this.fakeClefType, keys: this.notePosition, duration: sPickedNote.vfNotation }));\n    } else {\n      // Add the note that will show up\n    note.push(new Vex.Flow.StaveNote({ clef: this.fakeClefType, keys: this.notePosition, duration: `${sPickedNote.vfNotation}${sNoteSuffix}` }));\n\n      const remainingBeats = getBeatsPerMeasure(sTimeSignature) - sPickedNote.normalizedDuration;\n\n      const match = getAllowedNotesFromTimeSignature(sTimeSignature).find(item => item.normalizedDuration === remainingBeats);\n\n      if (match) {\n        note.push(new Vex.Flow.GhostNote({ clef: this.fakeClefType, keys: this.notePosition, duration: match.vfNotation }));\n      }\n      else {\n        const remainingNotes = finishMeasure(remainingBeats, getAllowedNotesFromTimeSignature(sTimeSignature));\n        remainingNotes.forEach(index => {\n          note.push(\n            new Vex.Flow.GhostNote({ clef: this.fakeClefType, keys: this.notePosition, duration:  getAllowedNotesFromTimeSignature(sTimeSignature)[index].vfNotation })\n          );\n        });\n      }\n    }\n\n    var voice = new Vex.Flow.Voice({\n      num_beats: getBeatsPerMeasure(sTimeSignature),\n      beat_value: getNoteTypeForBeat(sTimeSignature),\n    });\n    voice.addTickables(note);\n    new Vex.Flow.Formatter().joinVoices([voice]).format([voice], 120);\n    stave.setContext(ctx).draw();\n    voice.draw(ctx, stave);\n  }\n\n  componentDidMount() {\n    const { sTimeSignature, sId, sNoteSuffix, sPickedNote } = this.state;\n\n    const noteContainer = document.createElement('div');\n    // const refreshButton = document.createElement('i');\n    // refreshButton.classList.add('fa', 'fa-redo-alt');\n    // refreshButton.setAttribute('data-id', sId);\n    // refreshButton.setAttribute('onClick', this.handleClick.bind(this));\n    // // className=\"fa fa-redo-alt\" data-id={sId} onClick={this.handleClick}\n    noteContainer.id = sId;\n    noteContainer.classList.add('note-question', 'col-sm-2');\n    // noteContainer.appendChild(refreshButton);\n\n    const rowContainer = document.getElementById('note-container-row');\n    const container = document.getElementsByClassName(sId)[0];\n    container.appendChild(noteContainer);\n    rowContainer.appendChild(container);\n    var renderer = new Vex.Flow.Renderer(noteContainer, Vex.Flow.Renderer.Backends.SVG);\n    renderer.resize(150, 150);\n    var ctx = renderer.getContext();\n    var stave = new Vex.Flow.Stave(10, 40, 120);\n    stave.setConfigForLines(this.lineConfig);\n    stave\n      .addClef(this.clefType)\n      .addTimeSignature(sTimeSignature)\n      .setEndBarType(this.barType);\n    var note = [];\n    if (getBeatsPerMeasure(sTimeSignature) - sPickedNote.normalizedDuration === 0) {\n      note.push(new Vex.Flow.StaveNote({ clef: this.fakeClefType, keys: this.notePosition, duration: sPickedNote.vfNotation }));\n    } else {\n      // Add the note that will show up\n    note.push(new Vex.Flow.StaveNote({ clef: this.fakeClefType, keys: this.notePosition, duration: `${sPickedNote.vfNotation}${sNoteSuffix}` }));\n\n      const remainingBeats = getBeatsPerMeasure(sTimeSignature) - sPickedNote.normalizedDuration;\n      const match = getAllowedNotesFromTimeSignature(sTimeSignature).find(item => item.normalizedDuration === remainingBeats);\n\n      if (match) {\n        note.push(new Vex.Flow.GhostNote({ clef: this.fakeClefType, keys: this.notePosition, duration: match.vfNotation }));\n      }\n      else {\n        const remainingNotes = finishMeasure(remainingBeats, getAllowedNotesFromTimeSignature(sTimeSignature));\n        remainingNotes.forEach(index => {\n          note.push(\n            new Vex.Flow.GhostNote({ clef: this.fakeClefType, keys: this.notePosition, duration:  getAllowedNotesFromTimeSignature(sTimeSignature)[index].vfNotation })\n          );\n        });\n      }\n    }\n\n    var voice = new Vex.Flow.Voice({\n      num_beats: getBeatsPerMeasure(sTimeSignature),\n      beat_value: getNoteTypeForBeat(sTimeSignature),\n    });\n    voice.addTickables(note);\n    new Vex.Flow.Formatter().joinVoices([voice]).format([voice], 120);\n    stave.setContext(ctx).draw();\n    voice.draw(ctx, stave);\n  }\n\n  handleClick(e) {\n    const { sAllowedMeters } = this.state;\n    const { allowedNotes } = this.props;\n    const timeSignature = getRandomTimeSignature(sAllowedMeters);\n    //send onr time signature not an array.\n    // should we reset allowed notes?\n    const noteChoices = getAllowedNotesFromTimeSignatureAndActiveNotes(timeSignature, allowedNotes);\n    const randomNote = getRandomFromAllowedNotes(noteChoices);\n\n    this.setState({\n      sTimeSignature: timeSignature,\n      sAllowedNotes: noteChoices,\n      sPickedNote: randomNote,\n      sNumberOfBeats : getBeatsPerMeasure(timeSignature),\n      sBeatValue : getNoteTypeForBeat(timeSignature),\n    })\n\n  }\n  render() {\n    const { sId } = this.state;\n    const questionContainerClass = `${sId} quest-container`;\n    return (\n    <div className={questionContainerClass}>\n      <button type=\"button\" data-id={sId} onClick={this.handleClick}><i className=\"screen-only fa fa-redo-alt\"></i></button>\n    </div>\n    );\n  }\n}\n\nexport default QuestionComponent;\n","import React from 'react';\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { hasError: false };\n    }\n\n    componentDidCatch(error, info) {\n      // Display fallback UI\n      this.setState({ hasError: true });\n      // You can also log the error to an error reporting service\n    }\n\n    render() {\n      if (this.state.hasError) {\n        // You can render any custom fallback UI\n        return <h6>Did you select a not and time signature that are not compatible?</h6>;\n      }\n      return this.props.children;\n    }\n  }\n\n  export default ErrorBoundary;","import React, { Fragment } from 'react';\nimport { NavLink, Link } from 'react-router-dom';\n\nimport { RoutePath } from '../../constants';\nimport './DefaultTemplate.scss';\n\n\nclass DefaultTemplate extends React.PureComponent {\n  render() {\n    const { children } = this.props;\n    return (\n      <Fragment>\n        <nav className=\"screen-only navbar navbar-expand-lg navbar-dark bg-dark\">\n          <Link className=\"navbar-brand\" to={RoutePath.HOME}>\n            <i className=\"fas fa-music\"></i> Music Minute\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarNavAltMarkup\"\n            aria-controls=\"navbarNavAltMarkup\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n            <div className=\"navbar-nav\">\n              <NavLink activeClassName=\"active\" className=\"nav-item nav-link\" exact to={RoutePath.HOME}>\n                Create\n              </NavLink>\n              <NavLink activeClassName=\"active\" className=\"nav-item nav-link\" to={RoutePath.ABOUT}>\n                About\n              </NavLink>\n            </div>\n          </div>\n        </nav>\n        <main>{children}</main>\n      </Fragment>\n    );\n  }\n}\n\nexport default DefaultTemplate;\n","import React, { Component } from 'react';\nimport Select from 'react-select';\nimport cx from 'classnames';\nimport QuestionComponent from '../../Components/QuestionComponent';\nimport ErrorBoundary from '../../Components/ErrorBoundary';\nimport { NoteValues, TimeSignatureOptions, NoteValueOptions } from '../../constants';\nimport { getXRandomTimeSignaturesFromAllowed, checkForCustomNotes } from '../../utilities';\nimport DefaultTemplate from '../Templates/DefaultTemplate';\nimport './MMMContainer.scss';\n\nclass MMMContainer extends Component {\n  constructor(props) {\n    const questionCount = 20;\n    super(props);\n    this.state = {\n      questionTypes: 0,\n      questionCount: questionCount,\n      renderWorksheet: false,\n      timeSigs: [],\n      allowedNotes: NoteValues,\n      allowedMeters: null,\n      hasCustomNotes: false,\n    };\n\n    this.handleChangeOfAllowedValues = this.handleChangeOfAllowedValues.bind(this);\n    this.handleChangeQuestionTypes = this.handleChangeQuestionTypes.bind(this);\n    this.handleChangeQuestionCount = this.handleChangeQuestionCount.bind(this);\n    this.handleMeterChange = this.handleMeterChange.bind(this);\n    this.handleToggleRender = this.handleToggleRender.bind(this);\n  }\n\n  componentWillUnmount() {\n    this.timesSigs = [];\n  }\n\n  handleToggleRender() {\n    const { renderWorksheet, allowedMeters, questionCount } = this.state;\n    console.log(getXRandomTimeSignaturesFromAllowed(10, allowedMeters));\n    this.setState({\n      renderWorksheet: !renderWorksheet,\n      timeSigs: getXRandomTimeSignaturesFromAllowed(questionCount, allowedMeters),\n    });\n  }\n\n  handleChangeQuestionTypes(e) {\n    this.setState({\n      questionTypes: +e.currentTarget.value,\n    });\n  }\n\n  handleChangeOfAllowedValues(e) {\n    const { allowedNotes } = this.state;\n    const copy = allowedNotes;\n    const keys = Object.keys(copy);\n    let hasNotes = false;\n    for (let i = 0; i < keys.length; i += 1) {\n      copy[keys[i]].active = false;\n    }\n\n    for (let x = 0; x < e.length; x += 1) {\n      for (let i = 0; i < keys.length; i += 1) {\n        if (copy[keys[i]].vfNotation === e[x].value) {\n          copy[keys[i]].active = true;\n          hasNotes = true;\n        }\n      }\n    }\n\n    if (this.state.allowedMeters && this.state.allowedMeters.length !== 0 && hasNotes === true) {\n    }\n    this.setState({\n      allowedNotes: copy,\n      canRender: this.state.allowedMeters && this.state.allowedMeters.length !== 0 && hasNotes === true,\n    });\n  }\n\n  handleMeterChange(e) {\n    console.log(e);\n    const meters = [];\n    for (let i = 0; i < e.length; i += 1) meters.push(e[i].value);\n    console.log(meters);\n    const customNotes = checkForCustomNotes(this.state.allowedNotes);\n    this.setState({\n      allowedMeters: meters,\n      canRender: meters && customNotes,\n    });\n  }\n\n  handleChangeQuestionCount(e) {\n    console.log(e);\n    this.setState({\n      questionCount: +e.currentTarget.value,\n    });\n  }\n\n  render() {\n    const {\n      questionCount,\n      questionTypes,\n      timeSigs,\n      renderWorksheet,\n      allowedNotes,\n      allowedMeters,\n      canRender,\n    } = this.state;\n    const buttonText = renderWorksheet ? 'Reset' : 'Render Worksheet';\n\n    return (\n      <DefaultTemplate>\n        <form className={cx({ hide: renderWorksheet })}>\n          <div className=\"row\">\n            <div className=\"col-3\">\n              <fieldset>\n                <h3>Note Types</h3>\n                <input\n                  id=\"notes\"\n                  type=\"radio\"\n                  name=\"questionTypes\"\n                  value=\"0\"\n                  onClick={this.handleChangeQuestionTypes}\n                  defaultChecked\n                />\n                <label htmlFor=\"notes\">Only Notes</label>\n                <br />\n                <input\n                  id=\"rests\"\n                  type=\"radio\"\n                  name=\"questionTypes\"\n                  value=\"1\"\n                  onClick={this.handleChangeQuestionTypes}\n                />\n                <label htmlFor=\"rests\">Only Rests</label>\n                <br />\n                <input\n                  id=\"notes|rests\"\n                  type=\"radio\"\n                  name=\"questionTypes\"\n                  value=\"2\"\n                  onClick={this.handleChangeQuestionTypes}\n                />\n                <label htmlFor=\"notes\">Notes &amp; Rests</label>\n              </fieldset>\n            </div>\n\n            <div className=\"col-3\">\n              <fieldset>\n                <h4>Number of Questions</h4>\n                <input\n                  type=\"number\"\n                  id=\"number-of-questions\"\n                  name=\"numberOfQuestions\"\n                  min=\"1\"\n                  max=\"60\"\n                  default={questionCount}\n                  placeholder={questionCount}\n                  onChange={this.handleChangeQustionCount}\n                  onInput={this.handleChangeQuestionCount}\n                />\n              </fieldset>\n            </div>\n            <div className=\"col-6\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <fieldset>\n                    <h4>Time Signatures</h4>\n                    <Select\n                      id=\"time-signatures\"\n                      onChange={this.handleMeterChange}\n                      isMulti\n                      isSearchable\n                      options={TimeSignatureOptions}\n                      placeholder=\"Select time signature(s).\"\n                    />\n                    <label className=\"sr-only\" htmlFor=\"time-signatures\">\n                      Selection of time signatures\n                    </label>\n                  </fieldset>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <fieldset>\n                    <h4>Note Value Options</h4>\n                    <Select\n                      id=\"note-selection\"\n                      onChange={this.handleChangeOfAllowedValues}\n                      isMulti\n                      isSearchable\n                      options={NoteValueOptions}\n                      placeholder=\"Select note type(s).\"\n                    />\n                    <label className=\"sr-only\" htmlFor=\"time-signatures\">\n                      Selection of Note Values\n                    </label>\n                  </fieldset>\n                </div>\n              </div>\n            </div>\n          </div>\n          <hr />\n        </form>\n        <button className=\"btn btn-primary mt-4 screen-only\" type=\"button\" onClick={this.handleToggleRender} disabled={!canRender}>\n          {buttonText}\n        </button>\n        <button\n          id=\"print-value-worksheet\"\n          onClick={function() {\n            window.print();\n          }}\n          className={cx({ hide: !renderWorksheet }, 'btn', 'screen-only', 'btn-secondary', 'mt-4')}\n          type=\"button\"\n        >\n          <i className=\"fas fa-print\" /> Print\n        </button>\n\n        {renderWorksheet && (\n          <div id=\"questions\">\n            <div id=\"note-container-row\" className=\"row\">\n              {timeSigs.map((time, index) => (\n                <ErrorBoundary>\n                  <QuestionComponent\n                    allowedNotes={allowedNotes}\n                    timeSignature={time}\n                    allowedMeters={allowedMeters}\n                    noteTypes={questionTypes}\n                    key={`ts-${index}`}\n                    identifier={`ts-${index}`}\n                  />\n                </ErrorBoundary>\n              ))}\n            </div>\n          </div>\n        )}\n      </DefaultTemplate>\n    );\n  }\n}\n\nexport default MMMContainer;\n","import React from 'react';\nimport './AboutContainer.scss';\n\nconst About = props => {\n  return (\n      <div>\n        <div className=\"row\">\n          <div className=\"col-sm-8\">\n            <p>\n              Shamelessly stolen from <a href='http://secondrunnerup.com/mmm2/'>Mad Music 2</a>\n            </p>\n          </div>\n        </div>\n      </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\nimport DefaultTemplate from '../Templates/DefaultTemplate';\nimport About from './About.js';\nimport './AboutContainer.scss';\n\nconst AboutContainer = props => {\n  return (\n    <DefaultTemplate>\n      <About />\n    </DefaultTemplate>\n  );\n};\n\nexport default AboutContainer;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport DefaultTemplate from '../Templates/DefaultTemplate';\nimport { RoutePath } from '../../constants';\nimport './HomeContainer.scss';\nimport noteValueLogo from \"../../images/screen-shot-1.png\"\nimport noteNammerLogo from \"../../images/screen-shot-2.png\"\n\nconst HomeContainer = props => {\n  return (\n    <DefaultTemplate>\n      <div className=\"home-container\">\n        <NavLink to={RoutePath.NAMES}>\n          <div class=\"card\">\n            <img src={noteNammerLogo} class=\"card-img-top\" alt=\"...\" />\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">Note Namer</h5>\n              <p class=\"card-text\">\n                Create a worksheet of random notes picking from a number of clefs, ranges, and key-signatures.\n              </p>\n            </div>\n          </div>\n        </NavLink>\n\n        <NavLink to={RoutePath.VALUES}>\n        <div class=\"card\">\n            <img src={noteValueLogo} class=\"card-img-top\" alt=\"...\" />\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">Note Value</h5>\n              <p class=\"card-text\">\n                Create a worksheet of random notes values. Pick from a number of diferent time-signatures and note values.\n              </p>\n            </div>\n          </div>\n        </NavLink>\n      </div>\n    </DefaultTemplate>\n  );\n};\n\nexport default HomeContainer;\n","import React from 'react';\nimport DefaultTemplate from '../Templates/DefaultTemplate';\n\nconst GenericNotFoundContainer = props => {\n  return (\n    <DefaultTemplate>\n      <div>\n        <h1>Not Found</h1>\n      </div>\n    </DefaultTemplate>\n  );\n};\n\nexport default GenericNotFoundContainer;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { RoutePath } from './constants';\nimport MMMContainer from './Pages/MMM/MMMContainer';\nimport AboutContainer from './Pages/About/AboutContainer';\nimport HomeContainer from './Pages/Home/HomeContainer';\nimport GenericNotFoundContainer from './Pages/Error/GenericNotFoundContainer';\n\nconst AppRoutes = () => (\n    <Switch>\n        <Route exact path={RoutePath.HOME} component={HomeContainer} />\n        <Route exact path={RoutePath.ABOUT} component={AboutContainer} />\n        <Route exact path={RoutePath.NAMES} component={GenericNotFoundContainer} />\n        <Route exact path={RoutePath.VALUES} component={MMMContainer} />\n        <Route component={GenericNotFoundContainer} />\n    </Switch>\n)\n\nexport default AppRoutes;","import React, { Component } from 'react';\nimport { Router } from 'react-router-dom';\nimport history from './history';\nimport AppRoutes from './App.routes';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router history={history}>\n        <AppRoutes />\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}