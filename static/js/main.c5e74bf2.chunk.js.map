{"version":3,"sources":["images/screen-shot-1.png","images/screen-shot-2.png","history.js","constants.js","utilities.js","Components/NoteValueQuestionComponent.js","Components/ErrorBoundary.js","Pages/Templates/DefaultTemplate.js","Pages/NoteName/NoteNameContainer.js","Pages/NoteValue/NoteValueContainer.js","Pages/About/About.js","Pages/About/AboutContainer.js","Pages/Home/HomeContainer.js","Pages/Error/GenericNotFoundContainer.js","App.routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","createBrowserHistory","RoutePath","TimeSignatureOptions","value","label","NoteValueOptions","NoteValues","whole","properName","vfNotation","duration","numericDesignation","active","half","quarter","eighth","sixteenth","thirtysecond","KeySignatureOptions","getBeatsPerMeasure","timeSignature","split","getNoteTypeForBeat","getAllowedNotesFromTimeSignature","noteValues","beatValue","allNotes","Object","keys","noteMatchIndex","forEach","item","index","multiplier","ret","tmp","normalizedDuration","push","getNoteValuesFromTimeSignature","bpm","filter","getAllowedNotesFromTimeSignatureAndActiveNotes","allowedNotes","notes","getNoteValuesFromTimeSignatureAndCustomNotes","test","this","getRandomTimeSignature","allowedMeters","Math","floor","random","length","getXRandomTimeSignaturesFromAllowed","count","timeSignatureArray","i","getRandomFromAllowedNotes","noteChoices","getRandomNoteFromAllowedNotes","getNoteSuffix","type","NoteValueQuestionComponent","Component","constructor","props","super","drawQuestion","noteContainer","state","sTimeSignature","sPickedNote","sNoteSuffix","clef","renderer","Vex","Flow","Renderer","Backends","SVG","resize","ctx","getContext","stave","Stave","setConfigForLines","lineConfig","addClef","addTimeSignature","setEndBarType","barType","note","StaveNote","notePosition","remainingBeats","match","find","GhostNote","beatsLeft","arrayOfIndexes","beatsLeftInMeasure","finishMeasure","voice","Voice","num_beats","beat_value","addTickables","Formatter","joinVoices","format","setContext","draw","console","log","identifier","noteTypes","randomNote","allowedClefs","undefined","sAllowedNotes","sAllowedMeters","sNumberOfBeats","sBeatValue","sId","visible","handleClick","bind","componentDidUpdate","document","getElementById","innerHTML","componentDidMount","createElement","id","classList","add","rowContainer","container","getElementsByClassName","appendChild","e","setState","render","questionContainerClass","className","data-id","onClick","ErrorBoundary","React","hasError","componentDidCatch","error","info","children","DefaultTemplate","PureComponent","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","activeClassName","exact","NoteNameContainer","questionTypes","questionCount","renderWorksheet","allowedKeySignatures","keySignatures","canRender","hasNotes","handleChangeOfAllowedValues","handleChangeQuestionTypes","handleChangeQuestionCount","handleKeySignatureChange","handleToggleRender","componentWillUnmount","timesSigs","currentTarget","copy","x","buttonText","cx","hide","name","defaultChecked","htmlFor","min","max","default","placeholder","onChange","handleChangeQustionCount","onInput","isMulti","isSearchable","options","disabled","window","print","map","time","key","NoteValueContainer","timeSigs","hasCustomNotes","handleMeterChange","meters","customNotes","values","About","href","AboutContainer","HomeContainer","src","noteNammerLogo","alt","noteValueLogo","GenericNotFoundContainer","AppRoutes","path","component","App","history","Boolean","location","hostname","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c5e74bf2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/screen-shot-1.806d58ca.png\";","module.exports = __webpack_public_path__ + \"static/media/screen-shot-2.a2de2822.png\";","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","export const RoutePath = {\n    HOME: '/music-minute',\n    ABOUT: '/music-minute/about',\n    NAMES: '/music-minute/create/names',\n    VALUES: '/music-minute/create/values'\n}\n\nexport const TimeSignatures = ['3/2', '2/2', '2/4', '3/4', '4/4', '5/4', '3/8', '5/8', '6/8', '9/8', '12/8']\n\nexport const TimeSignatureOptions = [\n    { value: '3/2', label: '3/2', },\n    { value: '2/2', label: '2/2', },\n    { value: '2/4', label: '2/4', },\n    { value: '3/4', label: '3/4', },\n    { value: '4/4', label: '4/4', },\n    { value: '5/4', label: '5/4', },\n    { value: '3/8', label: '3/8', },\n    { value: '5/8', label: '5/8', },\n    { value: '6/8', label: '6/8', },\n    { value: '9/8', label: '9/8', },\n    { value: '12/8', label: '12/8', },\n  ];\n\n  export const NoteValueOptions = [\n    { value: 'w', label: '𝅝', },\n    { value: 'h', label: '𝅗𝅥', },\n    { value: 'q', label: '♩', },\n    { value: '8', label: '𝅘𝅥𝅮', },\n    { value: '16', label: '𝅘𝅥𝅯', },\n    { value: '32', label: '𝅘𝅥𝅰', },\n  ];\n\nexport const NoteValues = {\n    whole: {\n        properName: 'Whole Note',\n        vfNotation: 'w',\n        duration: 1,\n        numericDesignation: 1,\n        active: false,\n    },\n    half: {\n        properName: 'Half Note',\n        vfNotation: 'h',\n        duration: 0.5,\n        numericDesignation: 2,\n        active: false,\n    },\n    quarter: {\n        properName: 'Quarter Note',\n        vfNotation: 'q',\n        duration: 0.25,\n        numericDesignation: 4,\n        active: false,\n    },\n    eighth: {\n        properName: 'Eighth Note',\n        vfNotation: '8',\n        duration: 0.125,\n        numericDesignation: 8,\n        active: false,\n    },\n    sixteenth: {\n        properName: 'Sixteenth Note',\n        vfNotation: '16',\n        duration: 0.0625,\n        numericDesignation: 16,\n        active: false,\n    },\n    thirtysecond: {\n        properName: 'Thirty-Second Note',\n        vfNotation: '32',\n        duration: 0.03125,\n        numericDesignation: 32,\n        active: false,\n    }\n}\n\nexport const KeySignatureOptions = [\n    {\"value\": \"flat-6\", \"label\": \"Gb Major / Eb minor\"},\n    {\"value\": \"flat-5\", \"label\": \"Db Major / Bb minor\"},\n    {\"value\": \"flat-4\", \"label\": \"Ab Major / F minor\"},\n    {\"value\": \"flat-3\", \"label\": \"Eb Major / F minor\"},\n    {\"value\": \"flat-2\", \"label\": \"Bb Major / G minor\"},\n    {\"value\": \"flat-1\", \"label\": \"F Major / D minor\"},\n    {\"value\": \"none\", \"label\": \"C Major / A minor\"},\n    {\"value\": \"sharp-1\", \"label\": \"G Major / E minor\"},\n    {\"value\": \"sharp-2\", \"label\": \"D Major / B minor\"},\n    {\"value\": \"sharp-3\", \"label\": \"A Major / F# minor\"},\n    {\"value\": \"sharp-4\", \"label\": \"E Major / C# minor\"},\n    {\"value\": \"sharp-5\", \"label\": \"B Major / G# minor\"},\n    {\"value\": \"sharp-6\", \"label\": \"F# Major / D# minor\"},\n    {\"value\": \"sharp-7\", \"label\": \"C# Major / A# minor\"},\n]\n","import { TimeSignatures, NoteValues } from './constants';\n\n/**\n * Returns the number of beats per measure given a time signature\n *\n * @param   {string}  timeSignature  format of n/x where n and x are numbers\n *\n * @return  {integer}                 returns an integer\n */\nfunction getBeatsPerMeasure(timeSignature) {\n    return +timeSignature.split('/')[0];\n}\n\n/**\n * Returns an integer value depicting the note type that get's one beat\n *\n * @param   {string}  timeSignature  format of n/x where n and x are numbers\n *\n * @return  {integer}                 returns an integer\n */\nfunction getNoteTypeForBeat(timeSignature) {\n    return +timeSignature.split('/')[1];\n}\n\n/**\n * [getNoteValuesFromTimeSignature description]\n *\n * @param   {string}  timeSignature  format of n/x where n and x are numbers\n *\n * @return  {array}                 returns an array of objects\n */\nfunction getNoteValuesFromTimeSignature(timeSignature) {\n    const beatValue = getNoteTypeForBeat(timeSignature);\n    // find the object with the matching numeric designation\n    const allNotes = Object.keys(NoteValues);\n    let noteMatchIndex = null\n    allNotes.forEach((item, index) => {\n        if (NoteValues[item].numericDesignation === beatValue) {\n            noteMatchIndex = index;\n        }\n    })\n\n    // what type of note gets one beat?\n    // NoteValues[allNotes[test2]]\n\n    // What is the multiplier for all other notes to determine how many beats\n    // they get in the time signature?\n    const multiplier = (1 / NoteValues[allNotes[noteMatchIndex]].duration);\n\n    const ret = [];\n    allNotes.forEach((item, index) => {\n        let tmp = {};\n        tmp.properName = NoteValues[item].properName;\n        tmp.normalizedDuration = NoteValues[item].duration * multiplier;\n        tmp.vfNotation = NoteValues[item].vfNotation;\n        ret.push(tmp);\n    });\n    return ret;\n}\n/**\n * [getNormalizedDuration description]\n *\n * @param   {integer}  duration    [duration description]\n * @param   {integer}  multiplier  [multiplier description]\n *\n * @return  {integer}              [return description]\n */\nfunction getNormalizedDuration(duration, multiplier) {\n    return duration * multiplier;\n}\nfunction getMultiplier(duration) {\n    return ( 1 / duration );\n}\nfunction getNoteValuesFromTimeSignatureAndCustomNotes(timeSignature, notes) {\n    const beatValue = getNoteTypeForBeat(timeSignature);\n    // find the object with the matching numeric designation\n    const allNotes = Object.keys(notes);\n    let noteMatchIndex = null\n    allNotes.forEach((item, index) => {\n        if (notes[item].numericDesignation === beatValue) {\n            noteMatchIndex = index;\n        }\n    })\n    // what type of note gets one beat?\n    // NoteValues[allNotes[test2]]\n\n    // What is the multiplier for all other notes to determine how many beats\n    // they get in the time signature?\n    const multiplier = (1 / notes[allNotes[noteMatchIndex]].duration);\n\n    const ret = [];\n    allNotes.forEach((item, index) => {\n        let tmp = {};\n        tmp.properName = notes[item].properName;\n        tmp.normalizedDuration = notes[item].duration * multiplier;\n        tmp.vfNotation = notes[item].vfNotation;\n        tmp.active = notes[item].active;\n        tmp.duration = notes[item].duration;\n        tmp.numericDesignation = notes[item].numericDesignation;\n        ret.push(tmp);\n    });\n    return ret;\n}\n\nfunction getAllowedNotesFromTimeSignature(timeSignature) {\n    const noteValues = getNoteValuesFromTimeSignature(timeSignature);\n    const bpm = getBeatsPerMeasure(timeSignature);\n    return noteValues.filter(item => item.normalizedDuration <= bpm);\n}\n\nfunction getAllowedNotesFromTimeSignatureAndActiveNotes(timeSignature, allowedNotes) {\n\n    const noteValues = getNoteValuesFromTimeSignatureAndCustomNotes(timeSignature, allowedNotes);\n    const bpm = getBeatsPerMeasure(timeSignature);\n    return noteValues.filter(test, bpm);\n}\n\nfunction test(item) {\n    if (item.normalizedDuration <= this && item.active === true) {\n        return true;\n    }\n    return false;\n}\n\nfunction getRandomTimeSignature(allowedMeters) {\n    return allowedMeters[Math.floor(Math.random() * Math.floor(allowedMeters.length))];\n}\n\nfunction getXRandomTimeSignaturesFromAllowed(count, allowedMeters){\n    const timeSignatureArray = [];\n    for (let i = 0; i < count; i += 1) {\n        timeSignatureArray.push(allowedMeters[Math.floor(Math.random() * Math.floor(allowedMeters.length))]);\n    }\n    return timeSignatureArray;\n}\n\nfunction getXRandomTimeSignatures(count) {\n    const timeSignatureArray = [];\n    for (let i = 0; i < count; i += 1) {\n        timeSignatureArray.push(TimeSignatures[Math.floor(Math.random() * Math.floor(TimeSignatures.length))]);\n    }\n    return timeSignatureArray;\n}\n\nfunction getRandomNoteFromAllowedNotes(noteChoices) {\n    return noteChoices[Math.floor(Math.random() * Math.floor(noteChoices.length))];\n}\n\nfunction getRandomFromAllowedNotes(noteChoices) {\n    return getRandomNoteFromAllowedNotes(noteChoices);\n}\n\nfunction finishMeasure(beatsLeft, noteValues) {\n    const arrayOfIndexes = [];\n    let beatsLeftInMeasure = beatsLeft;\n    let i = 0;\n    while (beatsLeftInMeasure > 0) {\n        if (noteValues[i].normalizedDuration <= beatsLeftInMeasure) {\n            beatsLeftInMeasure = beatsLeftInMeasure - noteValues[i].normalizedDuration;\n            arrayOfIndexes.push(i);\n        }\n        else {\n            i = i+1;\n        }\n    }\n    return arrayOfIndexes;\n}\n\nfunction getNoteSuffix(type) {\n    if (type === 0) return ''\n    else if (type===1) return 'r';\n    const rand = Math.random() < 0.5\n    if (rand) {\n        return '';\n    }\n\n    return 'r';\n}\n\nfunction checkForCustomNotes(allowedNotes) {\n    const allowedNotesArray = Object.values(allowedNotes);\n\n    return allowedNotesArray.find(note => note.active === true);\n}\n\nexport {\n    getBeatsPerMeasure,\n    getNoteValuesFromTimeSignature,\n    getNoteTypeForBeat,\n    getAllowedNotesFromTimeSignature,\n    getRandomTimeSignature,\n    getRandomFromAllowedNotes,\n    finishMeasure,\n    getXRandomTimeSignatures,\n    getNoteSuffix,\n    getAllowedNotesFromTimeSignatureAndActiveNotes,\n    getXRandomTimeSignaturesFromAllowed,\n    getNormalizedDuration,\n    getMultiplier,\n    checkForCustomNotes,\n};\n\n// whole: {\n//     vfNotation: 'w',\n//     duration: 1,\n//     numericDesignation: 1,\n// },\n","import React, { Component} from 'react';\nimport Vex from 'vexflow';\nimport './QuestionComponent.scss';\n\nimport {\n  getBeatsPerMeasure,\n  getNoteTypeForBeat,\n  getAllowedNotesFromTimeSignature,\n  getRandomTimeSignature,\n  getAllowedNotesFromTimeSignatureAndActiveNotes,\n  getRandomFromAllowedNotes,\n  finishMeasure,\n  getNoteSuffix,\n} from '../utilities';\n\nclass NoteValueQuestionComponent extends Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props);\n    const {allowedNotes, identifier, noteTypes} = props;\n    const timeSignature = getRandomTimeSignature(props.allowedMeters);\n    const noteChoices = getAllowedNotesFromTimeSignatureAndActiveNotes(timeSignature, allowedNotes);\n    const randomNote = getRandomFromAllowedNotes(noteChoices);\n    let {allowedClefs} = props;\n    // TODO: add a different function that just gets a random element from a list\n    if (allowedClefs === undefined) {\n      allowedClefs = [\"percussion\"]\n    }\n    const clef = getRandomTimeSignature(allowedClefs)\n\n\n    this.state = {\n      sTimeSignature : timeSignature,\n      sAllowedNotes :  noteChoices,\n      sAllowedMeters: props.allowedMeters,\n      sPickedNote : randomNote,\n      sNumberOfBeats : getBeatsPerMeasure(timeSignature),\n      sBeatValue : getNoteTypeForBeat(timeSignature),\n      sId : identifier,\n      sNoteSuffix: getNoteSuffix(noteTypes),\n      clef: clef,\n    }\n\n    console.log(this.state);\n    // VEXFLOW SETUP\n    this.notePosition = ['b/4'];\n    this.barType = 'double';\n    this.lineConfig = [\n      { visible: false },\n      { visible: false },\n      { visible: true },\n      { visible: false },\n      { visible: false },\n    ];\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  drawQuestion = (noteContainer) => {\n    const {sTimeSignature, sPickedNote, sNoteSuffix, clef} = this.state;\n\n    var renderer = new Vex.Flow.Renderer(noteContainer, Vex.Flow.Renderer.Backends.SVG);\n    renderer.resize(150, 150);\n    var ctx = renderer.getContext();\n    var stave = new Vex.Flow.Stave(10, 40, 120);\n    stave.setConfigForLines(this.lineConfig);\n    stave\n      .addClef(clef)\n      .addTimeSignature(sTimeSignature)\n      .setEndBarType(this.barType);\n    var note = [];\n    if (getBeatsPerMeasure(sTimeSignature) - sPickedNote.normalizedDuration === 0) {\n      note.push(new Vex.Flow.StaveNote({ clef: clef, keys: this.notePosition, duration: sPickedNote.vfNotation }));\n    } else {\n      // Add the note that will show up\n    note.push(new Vex.Flow.StaveNote({ clef: clef, keys: this.notePosition, duration: `${sPickedNote.vfNotation}${sNoteSuffix}` }));\n\n      const remainingBeats = getBeatsPerMeasure(sTimeSignature) - sPickedNote.normalizedDuration;\n      const match = getAllowedNotesFromTimeSignature(sTimeSignature).find(item => item.normalizedDuration === remainingBeats);\n\n      if (match) {\n        note.push(new Vex.Flow.GhostNote({ clef: clef, keys: this.notePosition, duration: match.vfNotation }));\n      }\n      else {\n        const remainingNotes = finishMeasure(remainingBeats, getAllowedNotesFromTimeSignature(sTimeSignature));\n        remainingNotes.forEach(index => {\n          note.push(\n            new Vex.Flow.GhostNote({ clef: clef, keys: this.notePosition, duration:  getAllowedNotesFromTimeSignature(sTimeSignature)[index].vfNotation })\n          );\n        });\n      }\n    }\n\n    var voice = new Vex.Flow.Voice({\n      num_beats: getBeatsPerMeasure(sTimeSignature),\n      beat_value: getNoteTypeForBeat(sTimeSignature),\n    });\n    voice.addTickables(note);\n    new Vex.Flow.Formatter().joinVoices([voice]).format([voice], 120);\n    stave.setContext(ctx).draw();\n    voice.draw(ctx, stave);\n  }\n\n  componentDidUpdate() {\n    const { sId } = this.state;\n    // Empty the question but keep the container.\n    document.getElementById(sId).innerHTML = '';\n    const noteContainer = document.getElementById(sId);\n    this.drawQuestion(noteContainer)\n  }\n\n  componentDidMount() {\n    const { sId } = this.state;\n\n    const noteContainer = document.createElement('div');\n    noteContainer.id = sId;\n    noteContainer.classList.add('note-question', 'col-sm-2');\n\n    const rowContainer = document.getElementById('note-container-row');\n    const container = document.getElementsByClassName(sId)[0];\n    container.appendChild(noteContainer);\n    rowContainer.appendChild(container);\n    this.drawQuestion(noteContainer)\n  }\n\n  handleClick(e) {\n    const { sAllowedMeters } = this.state;\n    const { allowedNotes } = this.props;\n    const timeSignature = getRandomTimeSignature(sAllowedMeters);\n    //send onr time signature not an array.\n    // should we reset allowed notes?\n    const noteChoices = getAllowedNotesFromTimeSignatureAndActiveNotes(timeSignature, allowedNotes);\n    const randomNote = getRandomFromAllowedNotes(noteChoices);\n\n    this.setState({\n      sTimeSignature: timeSignature,\n      sAllowedNotes: noteChoices,\n      sPickedNote: randomNote,\n      sNumberOfBeats : getBeatsPerMeasure(timeSignature),\n      sBeatValue : getNoteTypeForBeat(timeSignature),\n    })\n\n  }\n  render() {\n    const { sId } = this.state;\n    const questionContainerClass = `${sId} quest-container`;\n    return (\n    <div className={questionContainerClass}>\n      <button type=\"button\" data-id={sId} onClick={this.handleClick}><i className=\"screen-only fa fa-redo-alt\"></i></button>\n    </div>\n    );\n  }\n}\n\nexport default NoteValueQuestionComponent;\n","import React from 'react';\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { hasError: false };\n    }\n\n    componentDidCatch(error, info) {\n      // Display fallback UI\n      this.setState({ hasError: true });\n      // You can also log the error to an error reporting service\n    }\n\n    render() {\n      if (this.state.hasError) {\n        // You can render any custom fallback UI\n        return <h6>Did you select a not and time signature that are not compatible?</h6>;\n      }\n      return this.props.children;\n    }\n  }\n\n  export default ErrorBoundary;","import React, { Fragment } from 'react';\nimport { NavLink, Link } from 'react-router-dom';\n\nimport { RoutePath } from '../../constants';\nimport './DefaultTemplate.scss';\n\n\nclass DefaultTemplate extends React.PureComponent {\n  render() {\n    const { children } = this.props;\n    return (\n      <Fragment>\n        <nav className=\"screen-only navbar navbar-expand-lg navbar-dark bg-dark\">\n          <Link className=\"navbar-brand\" to={RoutePath.HOME}>\n            <i className=\"fas fa-music\"></i> Music Minute\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarNavAltMarkup\"\n            aria-controls=\"navbarNavAltMarkup\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n            <div className=\"navbar-nav\">\n              <NavLink activeClassName=\"active\" className=\"nav-item nav-link\" exact to={RoutePath.HOME}>\n                Create\n              </NavLink>\n              <NavLink activeClassName=\"active\" className=\"nav-item nav-link\" to={RoutePath.ABOUT}>\n                About\n              </NavLink>\n            </div>\n          </div>\n        </nav>\n        <main>{children}</main>\n      </Fragment>\n    );\n  }\n}\n\nexport default DefaultTemplate;\n","import React, { Component } from 'react';\nimport Select from 'react-select';\nimport cx from 'classnames';\nimport NoteValueQuestionComponent from '../../Components/NoteValueQuestionComponent';\nimport ErrorBoundary from '../../Components/ErrorBoundary';\nimport { NoteValues, KeySignatureOptions, NoteValueOptions} from '../../constants';\nimport {getXRandomTimeSignaturesFromAllowed} from \"../../utilities\";\nimport DefaultTemplate from '../Templates/DefaultTemplate';\nimport './NoteNameContainer.scss';\n\nclass NoteNameContainer extends Component {\n  constructor(props) {\n    const questionCount = 20;\n    super(props);\n    this.state = {\n      questionTypes: 0,\n      questionCount: questionCount,\n      renderWorksheet: false,\n      allowedNotes: NoteValues,\n      allowedKeySignatures: null,\n      keySignatures: [],\n      canRender: false,\n      hasNotes: false,\n    };\n\n    this.handleChangeOfAllowedValues = this.handleChangeOfAllowedValues.bind(this);\n    this.handleChangeQuestionTypes = this.handleChangeQuestionTypes.bind(this);\n    this.handleChangeQuestionCount = this.handleChangeQuestionCount.bind(this);\n    this.handleKeySignatureChange = this.handleKeySignatureChange.bind(this);\n    this.handleToggleRender = this.handleToggleRender.bind(this);\n  }\n\n  componentWillUnmount() {\n    this.timesSigs = [];\n  }\n\n  handleToggleRender() {\n    const { renderWorksheet, allowedKeySignatures, questionCount } = this.state;\n    this.setState({\n      renderWorksheet: !renderWorksheet,\n      keySignatures: getXRandomTimeSignaturesFromAllowed(questionCount, allowedKeySignatures),\n    });\n  }\n\n  handleChangeQuestionTypes(e) {\n    this.setState({\n      questionTypes: +e.currentTarget.value,\n    });\n  }\n\n  handleChangeOfAllowedValues(e) {\n    const { allowedNotes } = this.state;\n    const copy = allowedNotes;\n    const keys = Object.keys(copy);\n    let hasNotes = false;\n    for (let i = 0; i < keys.length; i += 1) {\n      copy[keys[i]].active = false;\n    }\n\n    for (let x = 0; x < e.length; x += 1) {\n      for (let i = 0; i < keys.length; i += 1) {\n        if (copy[keys[i]].vfNotation === e[x].value) {\n          copy[keys[i]].active = true;\n          hasNotes = true;\n        }\n      }\n    }\n\n    this.setState({\n      allowedNotes: copy,\n      canRender: this.state.allowedKeySignatures && this.state.allowedKeySignatures.length !== 0 && hasNotes === true,\n    });\n  }\n\n  handleKeySignatureChange(e) {\n    const keySignatures = [];\n    for (let i = 0; i < e.length; i += 1) keySignatures.push(e[i].value);\n    this.setState({\n      allowedKeySignatures: keySignatures,\n    });\n  }\n\n  handleChangeQuestionCount(e) {\n    this.setState({\n      questionCount: +e.currentTarget.value,\n    });\n  }\n\n  render() {\n    const {\n      questionCount,\n      questionTypes,\n      keySignatures,\n      renderWorksheet,\n      allowedNotes,\n      allowedKeySignatures,\n      canRender,\n    } = this.state;\n    const buttonText = renderWorksheet ? 'Reset' : 'Render Worksheet';\n\n    return (\n      <DefaultTemplate>\n        <form className={cx({ hide: renderWorksheet })}>\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <fieldset>\n                <h3>Clef</h3>\n                <input\n                  id=\"treble\"\n                  type=\"radio\"\n                  name=\"questionTypes\"\n                  value=\"0\"\n                  onClick={this.handleChangeQuestionTypes}\n                  defaultChecked\n                />\n                <label htmlFor=\"notes\">Treble</label>\n                <br />\n                <input\n                  id=\"bass\"\n                  type=\"radio\"\n                  name=\"questionTypes\"\n                  value=\"1\"\n                  onClick={this.handleChangeQuestionTypes}\n                />\n                <label htmlFor=\"bass\">Bass</label>\n                <br />\n                <input\n                  id=\"alto\"\n                  type=\"radio\"\n                  name=\"questionTypes\"\n                  value=\"2\"\n                  onClick={this.handleChangeQuestionTypes}\n                />\n                <label htmlFor=\"alto\">Alto</label>\n                <br />\n                <input\n                  id=\"tenor\"\n                  type=\"radio\"\n                  name=\"questionTypes\"\n                  value=\"3\"\n                  onClick={this.handleChangeQuestionTypes}\n                />\n                <label htmlFor=\"tenor\">Tenor</label>\n              </fieldset>\n            </div>\n\n            <div className=\"col-2\">\n              <fieldset>\n                <h4>Number of Questions</h4>\n                <input\n                  type=\"number\"\n                  id=\"number-of-questions\"\n                  name=\"numberOfQuestions\"\n                  min=\"1\"\n                  max=\"60\"\n                  default={questionCount}\n                  placeholder={questionCount}\n                  onChange={this.handleChangeQustionCount}\n                  onInput={this.handleChangeQuestionCount}\n                />\n              </fieldset>\n            </div>\n            <div className=\"col-2\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <fieldset>\n                    <h4>Keys</h4>\n                    <Select\n                      id=\"keys\"\n                      onChange={this.handleKeySignatureChange}\n                      isMulti\n                      isSearchable\n                      options={KeySignatureOptions}\n                      placeholder=\"Select key(s)\"\n                    />\n                    <label className=\"sr-only\" htmlFor=\"keys\">\n                      Selection of key signature(s)\n                    </label>\n                  </fieldset>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <fieldset>\n                    <h4>Note Value Options</h4>\n                    <Select\n                      id=\"note-selection\"\n                      onChange={this.handleChangeOfAllowedValues}\n                      isMulti\n                      isSearchable\n                      options={NoteValueOptions}\n                      placeholder=\"Select note type(s).\"\n                    />\n                    <label className=\"sr-only\" htmlFor=\"time-signatures\">\n                      Selection of Note Values\n                    </label>\n                  </fieldset>\n                </div>\n              </div>\n            </div>\n          </div>\n          <hr />\n        </form>\n        <button className=\"btn btn-primary mt-4 screen-only\" type=\"button\" onClick={this.handleToggleRender} disabled={!canRender}>\n          {buttonText}\n        </button>\n        <button\n          id=\"print-value-worksheet\"\n          onClick={function() {\n            window.print();\n          }}\n          className={cx({ hide: !renderWorksheet }, 'btn', 'screen-only', 'btn-secondary', 'mt-4')}\n          type=\"button\"\n        >\n          <i className=\"fas fa-print\" /> Print\n        </button>\n\n        {renderWorksheet && (\n          <div id=\"questions\">\n            <div id=\"note-container-row\" className=\"row\">\n              {keySignatures.map((time, index) => (\n                <ErrorBoundary>\n                  <NoteValueQuestionComponent\n                    allowedNotes={allowedNotes}\n                    timeSignature={time}\n                    allowedMeters={allowedKeySignatures}\n                    noteTypes={questionTypes}\n                    key={`ts-${index}`}\n                    identifier={`ts-${index}`}\n                  />\n                </ErrorBoundary>\n              ))}\n            </div>\n          </div>\n        )}\n      </DefaultTemplate>\n    );\n  }\n}\n\nexport default NoteNameContainer;\n","import React, { Component } from 'react';\nimport Select from 'react-select';\nimport cx from 'classnames';\nimport NoteValueQuestionComponent from '../../Components/NoteValueQuestionComponent';\nimport ErrorBoundary from '../../Components/ErrorBoundary';\nimport { NoteValues, TimeSignatureOptions, NoteValueOptions } from '../../constants';\nimport { getXRandomTimeSignaturesFromAllowed, checkForCustomNotes } from '../../utilities';\nimport DefaultTemplate from '../Templates/DefaultTemplate';\nimport './NoteValueContainer.scss';\n\nclass NoteValueContainer extends Component {\n  constructor(props) {\n    const questionCount = 20;\n    super(props);\n    this.state = {\n      questionTypes: 0,\n      questionCount: questionCount,\n      renderWorksheet: false,\n      timeSigs: [],\n      allowedNotes: NoteValues,\n      allowedMeters: null,\n      hasCustomNotes: false,\n    };\n\n    this.handleChangeOfAllowedValues = this.handleChangeOfAllowedValues.bind(this);\n    this.handleChangeQuestionTypes = this.handleChangeQuestionTypes.bind(this);\n    this.handleChangeQuestionCount = this.handleChangeQuestionCount.bind(this);\n    this.handleMeterChange = this.handleMeterChange.bind(this);\n    this.handleToggleRender = this.handleToggleRender.bind(this);\n  }\n\n  componentWillUnmount() {\n    this.timesSigs = [];\n  }\n\n  handleToggleRender() {\n    const { renderWorksheet, allowedMeters, questionCount } = this.state;\n    console.log(getXRandomTimeSignaturesFromAllowed(10, allowedMeters));\n    this.setState({\n      renderWorksheet: !renderWorksheet,\n      timeSigs: getXRandomTimeSignaturesFromAllowed(questionCount, allowedMeters),\n    });\n  }\n\n  handleChangeQuestionTypes(e) {\n    this.setState({\n      questionTypes: +e.currentTarget.value,\n    });\n  }\n\n  handleChangeOfAllowedValues(e) {\n    const { allowedNotes } = this.state;\n    const copy = allowedNotes;\n    const keys = Object.keys(copy);\n    let hasNotes = false;\n    for (let i = 0; i < keys.length; i += 1) {\n      copy[keys[i]].active = false;\n    }\n\n    for (let x = 0; x < e.length; x += 1) {\n      for (let i = 0; i < keys.length; i += 1) {\n        if (copy[keys[i]].vfNotation === e[x].value) {\n          copy[keys[i]].active = true;\n          hasNotes = true;\n        }\n      }\n    }\n\n    if (this.state.allowedMeters && this.state.allowedMeters.length !== 0 && hasNotes === true) {\n    }\n    this.setState({\n      allowedNotes: copy,\n      canRender: this.state.allowedMeters && this.state.allowedMeters.length !== 0 && hasNotes === true,\n    });\n  }\n\n  handleMeterChange(e) {\n    console.log(e);\n    const meters = [];\n    for (let i = 0; i < e.length; i += 1) meters.push(e[i].value);\n    console.log(meters);\n    const customNotes = checkForCustomNotes(this.state.allowedNotes);\n    this.setState({\n      allowedMeters: meters,\n      canRender: meters && customNotes,\n    });\n  }\n\n  handleChangeQuestionCount(e) {\n    console.log(e);\n    this.setState({\n      questionCount: +e.currentTarget.value,\n    });\n  }\n\n  render() {\n    const {\n      questionCount,\n      questionTypes,\n      timeSigs,\n      renderWorksheet,\n      allowedNotes,\n      allowedMeters,\n      canRender,\n    } = this.state;\n    const buttonText = renderWorksheet ? 'Reset' : 'Render Worksheet';\n\n    return (\n      <DefaultTemplate>\n        <form className={cx({ hide: renderWorksheet })}>\n          <div className=\"row\">\n            <div className=\"col-3\">\n              <fieldset>\n                <h3>Note Types</h3>\n                <input\n                  id=\"notes\"\n                  type=\"radio\"\n                  name=\"questionTypes\"\n                  value=\"0\"\n                  onClick={this.handleChangeQuestionTypes}\n                  defaultChecked\n                />\n                <label htmlFor=\"notes\">Only Notes</label>\n                <br />\n                <input\n                  id=\"rests\"\n                  type=\"radio\"\n                  name=\"questionTypes\"\n                  value=\"1\"\n                  onClick={this.handleChangeQuestionTypes}\n                />\n                <label htmlFor=\"rests\">Only Rests</label>\n                <br />\n                <input\n                  id=\"notes|rests\"\n                  type=\"radio\"\n                  name=\"questionTypes\"\n                  value=\"2\"\n                  onClick={this.handleChangeQuestionTypes}\n                />\n                <label htmlFor=\"notes\">Notes &amp; Rests</label>\n              </fieldset>\n            </div>\n\n            <div className=\"col-3\">\n              <fieldset>\n                <h4>Number of Questions</h4>\n                <input\n                  type=\"number\"\n                  id=\"number-of-questions\"\n                  name=\"numberOfQuestions\"\n                  min=\"1\"\n                  max=\"60\"\n                  default={questionCount}\n                  placeholder={questionCount}\n                  onChange={this.handleChangeQustionCount}\n                  onInput={this.handleChangeQuestionCount}\n                />\n              </fieldset>\n            </div>\n            <div className=\"col-6\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <fieldset>\n                    <h4>Time Signatures</h4>\n                    <Select\n                      id=\"time-signatures\"\n                      onChange={this.handleMeterChange}\n                      isMulti\n                      isSearchable\n                      options={TimeSignatureOptions}\n                      placeholder=\"Select time signature(s).\"\n                    />\n                    <label className=\"sr-only\" htmlFor=\"time-signatures\">\n                      Selection of time signatures\n                    </label>\n                  </fieldset>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <fieldset>\n                    <h4>Note Value Options</h4>\n                    <Select\n                      id=\"note-selection\"\n                      onChange={this.handleChangeOfAllowedValues}\n                      isMulti\n                      isSearchable\n                      options={NoteValueOptions}\n                      placeholder=\"Select note type(s).\"\n                    />\n                    <label className=\"sr-only\" htmlFor=\"time-signatures\">\n                      Selection of Note Values\n                    </label>\n                  </fieldset>\n                </div>\n              </div>\n            </div>\n          </div>\n          <hr />\n        </form>\n        <button className=\"btn btn-primary mt-4 screen-only\" type=\"button\" onClick={this.handleToggleRender} disabled={!canRender}>\n          {buttonText}\n        </button>\n        <button\n          id=\"print-value-worksheet\"\n          onClick={function() {\n            window.print();\n          }}\n          className={cx({ hide: !renderWorksheet }, 'btn', 'screen-only', 'btn-secondary', 'mt-4')}\n          type=\"button\"\n        >\n          <i className=\"fas fa-print\" /> Print\n        </button>\n\n        {renderWorksheet && (\n          <div id=\"questions\">\n            <div id=\"note-container-row\" className=\"row\">\n              {timeSigs.map((time, index) => (\n                <ErrorBoundary>\n                  <NoteValueQuestionComponent\n                    allowedNotes={allowedNotes}\n                    timeSignature={time}\n                    allowedMeters={allowedMeters}\n                    noteTypes={questionTypes}\n                    key={`ts-${index}`}\n                    identifier={`ts-${index}`}\n                  />\n                </ErrorBoundary>\n              ))}\n            </div>\n          </div>\n        )}\n      </DefaultTemplate>\n    );\n  }\n}\n\nexport default NoteValueContainer;\n","import React from 'react';\nimport './AboutContainer.scss';\n\nconst About = props => {\n  return (\n      <div>\n        <div className=\"row\">\n          <div className=\"col-sm-8\">\n            <p>\n              Shamelessly stolen from <a href='http://secondrunnerup.com/mmm2/'>Mad Music 2</a>\n            </p>\n          </div>\n        </div>\n      </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\nimport DefaultTemplate from '../Templates/DefaultTemplate';\nimport About from './About.js';\nimport './AboutContainer.scss';\n\nconst AboutContainer = props => {\n  return (\n    <DefaultTemplate>\n      <About />\n    </DefaultTemplate>\n  );\n};\n\nexport default AboutContainer;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport DefaultTemplate from '../Templates/DefaultTemplate';\nimport { RoutePath } from '../../constants';\nimport './HomeContainer.scss';\nimport noteValueLogo from \"../../images/screen-shot-1.png\"\nimport noteNammerLogo from \"../../images/screen-shot-2.png\"\n\nconst HomeContainer = props => {\n  return (\n    <DefaultTemplate>\n      <div className=\"home-container\">\n        <NavLink to={RoutePath.NAMES}>\n          <div className=\"card\">\n            <img src={noteNammerLogo} className=\"card-img-top\" alt=\"...\" />\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">Note Namer</h5>\n              <p className=\"card-text\">\n                Create a worksheet of random notes picking from a number of clefs, ranges, and key-signatures.\n              </p>\n            </div>\n          </div>\n        </NavLink>\n\n        <NavLink to={RoutePath.VALUES}>\n        <div className=\"card\">\n            <img src={noteValueLogo} className=\"card-img-top\" alt=\"...\" />\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">Note Value</h5>\n              <p className=\"card-text\">\n                Create a worksheet of random notes values. Pick from a number of diferent time-signatures and note values.\n              </p>\n            </div>\n          </div>\n        </NavLink>\n      </div>\n    </DefaultTemplate>\n  );\n};\n\nexport default HomeContainer;\n","import React from 'react';\nimport DefaultTemplate from '../Templates/DefaultTemplate';\n\nconst GenericNotFoundContainer = props => {\n  return (\n    <DefaultTemplate>\n      <div>\n        <h1>Not Found</h1>\n      </div>\n    </DefaultTemplate>\n  );\n};\n\nexport default GenericNotFoundContainer;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { RoutePath } from './constants';\nimport NoteNameContainer from './Pages/NoteName/NoteNameContainer';\nimport NoteValueContainer from './Pages/NoteValue/NoteValueContainer';\nimport AboutContainer from './Pages/About/AboutContainer';\nimport HomeContainer from './Pages/Home/HomeContainer';\nimport GenericNotFoundContainer from './Pages/Error/GenericNotFoundContainer';\n\nconst AppRoutes = () => (\n    <Switch>\n        <Route exact path={RoutePath.HOME} component={HomeContainer} />\n        <Route exact path={RoutePath.ABOUT} component={AboutContainer} />\n        <Route exact path={RoutePath.NAMES} component={NoteNameContainer} />\n        <Route exact path={RoutePath.VALUES} component={NoteValueContainer} />\n        <Route component={GenericNotFoundContainer} />\n    </Switch>\n)\n\nexport default AppRoutes;","import React, { Component } from 'react';\nimport { Router } from 'react-router-dom';\nimport history from './history';\nimport AppRoutes from './App.routes';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router history={history}>\n        <AppRoutes />\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}